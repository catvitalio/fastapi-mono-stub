version: '3.8'

volumes:
  media:
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/media
  static:
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/static

x-server-common: &server-common
  restart: always
  image: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/server:develop-latest
  volumes:
    - media:/server/media
    - static:/server/static
  env_file:
    - .env
  depends_on:
    db:
      condition: service_healthy
    redis:
      condition: service_healthy

services:
  caddy:
    image: caddy:2.7.6-alpine
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - media:/src/media
      - static:/src/static
      - ${PWD}/caddy/Caddyfile:/etc/caddy/Caddyfile

  server:
    command: gunicorn -k uvicorn.workers.UvicornWorker -c gunicorn_conf.py config.app:app --preload -b 0.0.0.0:8000 --forwarded-allow-ips='*'
    <<: *server-common
    expose:
      - "8000"

  taskiq:
    command: taskiq worker config.taskiq:broker --fs-discover --tasks-pattern **/tasks/*.py
    <<: *server-common

  db:
    image: postgres:16.2-alpine
    restart: always
    user: postgres
    environment:
      POSTGRES_DB: ${DATABASE}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    healthcheck:
      test: pg_isready
      interval: 2s
      timeout: 10s
      retries: 40

  redis:
    image: redis:7.2.4-alpine
    restart: always
    healthcheck:
      test: redis-cli --raw incr ping
      interval: 2s
      timeout: 10s
      retries: 40
