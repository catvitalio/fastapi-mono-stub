[tool.poetry]
name = "fastapi-stub"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [{include = "fastapi_stub"}]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.110.0"
uvicorn = {extras = ["standart"], version = "^0.27.1"}
pydantic = {extras = ["email"], version = "^2.6.2"}
pydantic-settings = "^2.2.1"
sqlalchemy = "^2.0.27"
alembic = "^1.13.1"
asyncpg = "^0.29.0"
fastapi-jwt = "^0.2.0"
fastapi-mail = "^1.4.1"
taskiq = {extras = ["reload"], version = "^0.11.0"}
taskiq-redis = "^0.5.5"
taskiq-fastapi = "^0.3.1"
jinja2 = "^3.1.3"
passlib = "^1.7.4"
starlette-admin = {extras = ["i18n"], version = "^0.13.2"}

[tool.poetry.group.dev.dependencies]
ruff = "^0.3.7"
pytest = "^8.1.1"

[tool.ruff]
line-length = 100
indent-width = 4
exclude = [
    ".pytype",
    ".ruff_cache",
    "__pypackages__",
    "migrations",
    "__init__.py",
]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"

[tool.ruff.lint]
select = ["A", "F", "B", "C", "I", "T", "Q", "COM"]
ignore = ["B904", "B008"]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.mccabe]
max-complexity = 7

[tool.ruff.lint.isort]
no-lines-before = ["local-folder"]
section-order = ["future", "standard-library", "first-party", "third-party", "src", "local-folder"]

[tool.ruff.lint.isort.sections]
src = ["config", "migrations", "tests", "src"]

[tool.pytest.ini_options]
python_files = "tests.py test_*.py *_tests.py"
addopts = "--rootdir=tests --maxfail=5"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
